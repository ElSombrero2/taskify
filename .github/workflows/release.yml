name: Deploy release

on:
  pull_request:
    branches: [main]
    types: [closed]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{matrix.target}}
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{matrix.target}}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --bin taskify --verbose --release --target ${{matrix.target}}
      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="<BINARY_NAME>"
      
          dirname="$binary_name-0.1.0-${{matrix.target}}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi
      
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi
      - name: Upload the binaries
        uses: softprops/action-gh-release@v1