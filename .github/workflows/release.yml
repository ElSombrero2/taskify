name: Deploy release

on:
  pull_request:
    branches: [main]
    types: [closed]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build
    runs-on: ubuntu-latest
    strategy:
        matrix:
            target:
                - i686-pc-windows-gnu
                - i686-unknown-linux-gnu
                - x86_64-pc-windows-gnu
                - x86_64-unknown-linux-gnu
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Install x86 Build Dependencies
        if: ${{ matrix.target == 'i686-pc-windows-gnu' || matrix.target == 'i686-unknown-linux-gnu' }}
        run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install libssl-dev:i386 clang
      - name: Install x86_64 Build Dependencies
        if: ${{ matrix.target != 'i686-pc-windows-gnu' && matrix.target != 'i686-unknown-linux-gnu' }}
        run: sudo apt-get update && sudo apt-get install pkg-config libssl-dev clang
      - name: Build x86
        uses: actions-rs/cargo@v1
        if: ${{ matrix.target == 'i686-pc-windows-gnu' || matrix.target == 'i686-unknown-linux-gnu' }}
        env:
            TARGET_CC: clang
            OPENSSL_LIB_DIR: /usr/lib/i386-linux-gnu/
            OPENSSL_INCLUDE_DIR: /usr/include/openssl/
        with:
            command: build
            args: --release --target=${{ matrix.target }}
      - name: Build x86_64
        uses: actions-rs/cargo@v1
        if: ${{ matrix.target != 'i686-pc-windows-gnu' && matrix.target != 'i686-unknown-linux-gnu' }}
        env:
          TARGET_CC: clang
        with:
          command: build
          args: --release --target=${{ matrix.target }}
      - name: Build archive
        shell: bash
        run: |
          # Replace with the name of your binary
          binary_name="<BINARY_NAME>"
      
          dirname="$binary_name-0.1.0-${{matrix.target}}"
          mkdir "$dirname"
          if [ "${{ matrix.target }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi
      
          if [ "${{ matrix.target }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi
      - name: Upload the binaries
        uses: softprops/action-gh-release@v1